{"mappings":"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","sources":["src/js/refs.js","node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","src/js/unsplashAPI.js","src/js/markup.js","node_modules/spin.js/spin.js","src/js/spinner.js","src/js/infinite-scroll.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-gallery'),\n  backdrop: document.querySelector('[data-load]'),\n  spinner: document.querySelector('.js-spinner'),\n};\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","// https://api.unsplash.com/search/photos?client_id=LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc&page=1&query=office\n\nexport class UnsplashAPI {\n  #BASE_URL = 'https://api.unsplash.com/search/photos';\n  #KEY = 'LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc';\n  #query = '';\n  #page = 1;\n  #per_page = 15;\n  #totalPhotos = 0;\n\n  getPhotos() {\n    return fetch(\n      `${this.#BASE_URL}?client_id=${this.#KEY}&page=${this.#page}&query=${\n        this.#query\n      }&per_page=${this.#per_page}&color=black_and_white&orientation=landscape`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    });\n  }\n\n  setTotalPhotos(totalPhotos) {\n    this.#totalPhotos = totalPhotos;\n  }\n\n  hasMorePhotos() {\n    return this.#page < Math.ceil(this.#totalPhotos / this.#per_page);\n  }\n\n  incrementPage() {\n    this.#page += 1;\n  }\n\n  resetPage() {\n    this.#page = 1;\n  }\n\n  get query() {\n    return this.#query;\n  }\n\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n}\n","export function createGalleryCards(images) {\n  return images\n    .map(\n      ({ urls, alt_description }) => /*html*/ `<li class=\"gallery__item\">\n    <img src=\"${urls.small}\" alt=\"${alt_description}\" class=\"gallery-img\">\n</li>`\n    )\n    .join('');\n}\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n","import { Spinner } from 'spin.js';\nimport { refs } from './refs';\n\nvar opts = {\n  lines: 9, // The number of lines to draw\n  length: 36, // The length of each line\n  width: 17, // The line thickness\n  radius: 39, // The radius of the inner circle\n  scale: 1, // Scales overall size of the spinner\n  corners: 1, // Corner roundness (0..1)\n  speed: 0.8, // Rounds per second\n  rotate: 42, // The rotation offset\n  animation: 'spinner-line-fade-quick', // The CSS animation name for the lines\n  direction: 1, // 1: clockwise, -1: counterclockwise\n  color: '#1f9336', // CSS color or array of colors\n  fadeColor: 'transparent', // CSS color or array of colors\n  top: '50%', // Top position relative to parent\n  left: '50%', // Left position relative to parent\n  shadow: '0 0 1px transparent', // Box-shadow for the lines\n  zIndex: 2000000000, // The z-index (defaults to 2e9)\n  className: 'spinner', // The CSS class to assign to the spinner\n  position: 'absolute', // Element positioning\n};\n\nexport const spinner = new Spinner(opts);\nexport const spinnerPlay = () => {\n  spinner.spin(refs.spinner);\n  refs.backdrop.classList.remove('is-hidden');\n};\nexport const spinnerStop = () => {\n  spinner.stop();\n  refs.backdrop.classList.add('is-hidden');\n};\n","// https://api.unsplash.com/search/photos?page=1&query=office\n\nimport { refs } from './refs';\nimport { UnsplashAPI } from './unsplashAPI';\nimport { createGalleryCards } from './markup';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nconst options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\n\nconst callback = function (entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      console.log(entry.target);\n      observer.unobserve(entry.target);\n      unsplashAPI.incrementPage();\n      spinnerPlay();\n      unsplashAPI\n        .getPhotos()\n        .then(({ results }) => {\n          const markup = createGalleryCards(results);\n\n          refs.list.insertAdjacentHTML('beforeend', markup);\n\n          const hasMore = unsplashAPI.hasMorePhotos();\n          if (hasMore) {\n            const item = document.querySelector('.gallery__item:last-child');\n            observer.observe(item);\n          }\n        })\n        .catch(error => console.log(error))\n        .finally(() => {\n          spinnerStop();\n        });\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(callback, options);\n\nrefs.form.addEventListener('submit', onSearch);\n\nconst unsplashAPI = new UnsplashAPI();\n\nfunction onSearch(event) {\n  event.preventDefault();\n\n  const value = event.currentTarget.elements.query.value;\n\n  if (!value) {\n    return alert('Input any data!');\n  }\n  refs.list.innerHTML = '';\n  unsplashAPI.resetPage();\n  unsplashAPI.query = value;\n  spinnerPlay();\n\n  unsplashAPI\n    .getPhotos()\n    .then(({ results, total }) => {\n      if (results.length === 0) {\n        return alert('Enter normal value');\n      }\n      const markup = createGalleryCards(results);\n\n      refs.list.insertAdjacentHTML('beforeend', markup);\n      unsplashAPI.setTotalPhotos(total);\n      const hasMore = unsplashAPI.hasMorePhotos();\n      if (hasMore) {\n        const item = document.querySelector('.gallery__item:last-child');\n        observer.observe(item);\n      }\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      spinnerStop();\n    });\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","list","backdrop","spinner","$99d26d6ae153323e$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$77325facfa382e54$export$2e2bcd8739ae039","descriptor","call","value","$92121ed38d27acb0$export$2e2bcd8739ae039","$dba1998b20ced464$export$2e2bcd8739ae039","obj","privateCollection","$7efc65a322f137af$export$2e2bcd8739ae039","set","$dac75875e16c3833$export$2e2bcd8739ae039","writable","$9a4dad1b7a0c1382$export$2e2bcd8739ae039","$42d43a98a07d40d2$var$_BASE_URL","WeakMap","$42d43a98a07d40d2$var$_KEY","$42d43a98a07d40d2$var$_query","$42d43a98a07d40d2$var$_page","$42d43a98a07d40d2$var$_per_page","$42d43a98a07d40d2$var$_totalPhotos","$1457a8b41868a85b$export$e5fe54de13a924ea","images","map","urls","alt_description","small","join","$814250555bde48b4$var$__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","apply","this","$814250555bde48b4$var$defaults","lines","width","radius","scale","corners","color","fadeColor","animation","rotate","direction","speed","zIndex","className","top","left","shadow","position","$814250555bde48b4$export$7f7cbe89f1eacd2","Spinner","opts","spin","target","stop","el","createElement","setAttribute","transform","insertBefore","firstChild","Math","round","shadows","boxShadow","regex","_i","_a","split","matches","match","x","y","xUnits","yUnits","push","prefix","end","$814250555bde48b4$var$parseBoxShadow","degrees","backgroundLine","$814250555bde48b4$var$css","height","background","$814250555bde48b4$var$getColor","borderRadius","transformOrigin","delay","line","$814250555bde48b4$var$normalizeShadow","appendChild","$814250555bde48b4$var$drawLines","requestAnimationFrame","cancelAnimationFrame","animateId","clearTimeout","parentNode","removeChild","undefined","props","prop","style","idx","normalized","shadows_1","$dd8ebecfaae47a78$export$641374ffb95bc399","$814250555bde48b4$exports","$dd8ebecfaae47a78$export$2c6c1315bfe20b8f","classList","remove","$dd8ebecfaae47a78$export$b0293130610857b9","add","$93b54f497d416715$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","console","log","unobserve","$93b54f497d416715$var$unsplashAPI","incrementPage","getPhotos","then","results","markup","insertAdjacentHTML","hasMorePhotos","item","observe","catch","error","finally","root","rootMargin","threshold","addEventListener","event","preventDefault","currentTarget","elements","query","alert","innerHTML","resetPage","total","setTotalPhotos","err","fetch","response","ok","Error","statusText","json","totalPhotos","ceil","newQuery"],"version":3,"file":"infinite-scroll.f1a2f94d.js.map"}